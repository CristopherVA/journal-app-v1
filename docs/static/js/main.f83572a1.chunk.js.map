{"version":3,"sources":["firebase/firebase-config.js","types/types.js","action/uiAction.js","action/authAction.js","components/auth/GoogleButton.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","helpers/fileUpload.js","helpers/loadNotes.js","action/notesAction.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","msgError","type","payload","removeError","finishLoading","loginWidthEmailAndPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","GoogleButton","useDispatch","className","onClick","signInWithPopup","userCred","src","alt","useForm","initialState","useState","value","setValue","handleReset","newState","handleInputChange","target","name","LoginScreen","useSelector","state","ui","loading","isFormValid","validator","isEmail","length","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","to","href","RegisterScreen","nombre","password2","trim","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailandPassword","AuthRouter","exact","path","component","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","notes","forEach","noteSnap","push","id","data","addNewNote","note","activeNote","startLoadingNotes","setNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","deleteNote","NoteAppBar","active","style","display","files","title","text","allowOutsideClick","onBeforeMount","showLoading","fileUrl","close","startUploadFile","moment","format","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","width","height","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","margin","delete","startDeleteNote","NothingSelected","JournalEntry","date","noteDate","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","backgroundColor","justifyContent","alignItems","position","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f83572a1.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport  'firebase/compat/firestore';\r\nimport  'firebase/compat/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAq_82CcsEo8Wd5AS4pWquFznu40U14s5k\",\r\n  authDomain: \"journalapp-dcb99.firebaseapp.com\",\r\n  projectId: \"journalapp-dcb99\",\r\n  storageBucket: \"journalapp-dcb99.appspot.com\",\r\n  messagingSenderId: \"345459626321\",\r\n  appId: \"1:345459626321:web:b6f586bb2898a0f0ff8370\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n  firebase,\r\n  db,\r\n  googleAuthProvider,\r\n}\r\n","\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set Active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updataed images url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError = (msgError) => ({\r\n    type: types.uiSetError,\r\n    payload: msgError\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { facebookAuthProvider, firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './uiAction';\r\n\r\nexport const loginWidthEmailAndPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        dispatch(startLoading())\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading())\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading())\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLoginWithGoogle = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(userCred => {\r\n                dispatch(login(userCred.user.uid, userCred.user.displayName))\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailandPassword = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n       await firebase.auth().signOut();\r\n\r\n       dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoginWithGoogle } from '../../action/authAction';\r\n\r\nexport const GoogleButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLoginGoogle = () => {\r\n        dispatch(startLoginWithGoogle())\r\n    }\r\n\r\n    return (\r\n        <div  className=\"google_container\">\r\n            <p>Login width Google</p>\r\n            <div\r\n                onClick={handleLoginGoogle}\r\n                className=\"google-btn\"\r\n            >\r\n                <div className=\"google-icon-wrapper\">\r\n                    <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                </div>\r\n                <p className=\"btn-text\">\r\n                    <b>Sign in with google</b>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [value, setValue] = useState(initialState);\r\n\r\n    const handleReset = (newState = initialState) => {\r\n        setValue(newState)\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setValue({\r\n            ...value,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return {\r\n        value, \r\n        handleReset, \r\n        handleInputChange\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { GoogleButton } from './GoogleButton';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { loginWidthEmailAndPassword } from '../../action/authAction';\r\nimport { validator } from 'validator';\r\nimport { removeError, setError } from '../../action/uiAction';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector(state => state.ui)\r\n\r\n    const { value, handleInputChange } = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = value;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (isFormValid) {\r\n            dispatch(loginWidthEmailAndPassword(email, password))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is required'))\r\n            Swal.fire('Error', msgError, 'error')\r\n            return false;\r\n        } else if (password.length < 5) {\r\n            dispatch(setError('La password no es validad'))\r\n            Swal.fire('Error', msgError, 'error')\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth_container animate__animated animate__bounce animate__fadeInLeft\">\r\n            <h1 className=\"auth_title\">Login</h1>\r\n\r\n            <form onSubmit={handleSubmit} className=\"auth_form \">\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Into your Email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Into your Password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    className=\"btn-primary\"\r\n                    disabled={ loading }\r\n                >Login to Journal</button>\r\n                \r\n                <hr />\r\n                <GoogleButton />\r\n\r\n                <Link \r\n                    to=\"/auth/register\" \r\n                    className=\"auth_create-link\" \r\n                    href=\"#\"\r\n                >Create Account</Link>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../action/uiAction';\r\nimport { startRegisterWithEmailandPassword } from '../../action/authAction';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector(state => state.ui)\r\n\r\n    console.log(msgError);\r\n\r\n    const { value, handleInputChange } = useForm({\r\n        nombre: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { nombre, email, password, password2 } = value;\r\n\r\n    const hanldeRegister = e => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailandPassword(email, password, nombre))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if ( nombre.trim() === \"\" ) {\r\n            dispatch(setError('Nombre is required'))\r\n            Swal.fire('Error', msgError, 'error');\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is required'))\r\n            Swal.fire('Error', msgError, 'error');\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('La password no es validad debe de tener mas de 5 caracteres'))\r\n            Swal.fire('Error', msgError, 'error');\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth_container animate__animated animate__bounce animate__fadeInRight\">\r\n            <h1 className=\"auth_title\">Register</h1>\r\n\r\n            \r\n\r\n            <form onSubmit={hanldeRegister} className=\"auth_form\">\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    placeholder=\"Into your Full Name\"\r\n                    value={nombre}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Into your Email\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Into your Password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    className=\"input_auth\"\r\n                    type=\"password\"\r\n                    name=\"password2\"\r\n                    placeholder=\"Confirm your Password\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn-primary\"\r\n                >Register</button>\r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"auth_forgot-link\"\r\n                    href=\"#\"\r\n                >Sign in</Link>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n\r\n\r\n        <div className=\"auth_main \">\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const fileUpload = async ( file ) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/valent-design/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if (resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json()\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(noteSnap => {\r\n        notes.push({\r\n            id: noteSnap.id,\r\n            ...noteSnap.data()\r\n        })\r\n    })\r\n\r\n    console.log(notes);\r\n    return notes;\r\n}","import Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n\r\n    }\r\n}\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) =>  {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNote(notes))\r\n    }\r\n}\r\n\r\nexport const setNote = (note) => ({\r\n    type: types.notesLoad,\r\n    payload: note\r\n})\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update( noteToFirestore );\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore))\r\n        Swal.fire('Saved', 'Guardado con exito!', 'success')\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const startUploadFile = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { active:activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeMount: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url =  fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id))\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploadFile } from '../../action/notesAction';\r\nimport moment from 'moment';\r\n\r\nexport const NoteAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#file').click();\r\n    }\r\n\r\n    const handlePictureChange = (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ){\r\n            dispatch(startUploadFile(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            \r\n            <input \r\n                type=\"file\" \r\n                style={{display: 'none'}} \r\n                id='file'\r\n                name=\"file\"\r\n                onChange={handlePictureChange}\r\n            />\r\n\r\n\r\n            <span>\r\n                {\r\n                    moment().format(\"D  MMMM  YYYY\")\r\n                }\r\n            </span>\r\n            <div className=\"notes__button-content\">\r\n                <button className=\"btn\" onClick={handlePictureUpload}>Picture</button>\r\n                <button className=\"btn\" onClick={handleSave} >Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NoteAppBar } from './NoteAppBar';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startDeleteNote } from '../../action/notesAction';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const { active:note } = useSelector(state => state.notes)\r\n    const { value, handleInputChange, handleReset } = useForm(note) \r\n    const { title, body, id } = value\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            handleReset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [ note, handleReset ])\r\n\r\n    useEffect(() => {   \r\n        dispatch(activeNote(value.id, {...value}))\r\n    }, [value, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleteNote(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NoteAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    className=\"notes__title-input\"\r\n                    placeholder=\"Some awesome title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"What Happend Today\"\r\n                    name=\"body\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n            </div>\r\n\r\n            {\r\n                ( note.url ) &&\r\n                (\r\n                    <div style={{\r\n                        width: '200px',\r\n                        height: '200px',\r\n                        backgroundImage: `url(${note.url})`,\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        margin: '10px'\r\n                    }}>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <button className='btn-danger' onClick={handleDelete}>Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select someting\r\n                <br />\r\n                create a entry\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x-\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../action/notesAction';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    \r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {date, title, body, url} ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry  animate__animated animate__bounce animate__fadeInLeft\" onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                <div style={{\r\n                    width: '75px',\r\n                    height: '100px',\r\n                    backgroundImage: `url(${url})`,\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center',\r\n                    backgroundRepeat: 'no-repeat'\r\n               }}></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{ title }</p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h3>{noteDate.format('Do')}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry  key={note.id} {...note} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { JournalEntries } from './JournalEntries';\r\nimport { startLogout } from '../../action/authAction';\r\nimport { noteLogout, startNewNote } from '../../action/notesAction';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n        dispatch(noteLogout())\r\n    }\r\n\r\n    const handleNewNote = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <sidebar className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3>\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{ name }</span>\r\n                </h3>\r\n\r\n                <button onClick={handleLogout}className=\"btn\">Logout</button>\r\n            </div>\r\n\r\n            <div onClick={handleNewNote} className=\"journal__new-entry\">\r\n                 <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                 <p>New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </sidebar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__main-content\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    active\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\n\r\nimport { firebase } from '../firebase/firebase-config';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../action/authAction';\r\n\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { startLoadingNotes } from '../action/notesAction';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true)\r\n                \r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false);\r\n        })\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n\r\n    if (checking) {\r\n        return (\r\n            <div style={{\r\n                width: '100vw',\r\n                height: '100vh',\r\n                backgroundColor: '#5c62c5',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                position: 'absolute',\r\n\r\n                \r\n            }}>\r\n                <RotateSpinner />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticated={isLoggedIn}/>\r\n                        <PrivateRoute exact path=\"/\" component={JournalScreen} isAuthenticated={isLoggedIn} />\r\n\r\n                        {/* {\r\n                            ( isLoggedIn == true )\r\n                                ? (\r\n                                    <Route\r\n                                        exact\r\n                                        path='/'\r\n                                        component={JournalScreen}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect\r\n                                        to='/auth/login'\r\n                                        component={AuthRouter}\r\n                                    />\r\n                                )\r\n                        }\r\n\r\n                        {\r\n                            ( isLoggedIn == false )\r\n                                ? (\r\n                                    <Route\r\n                                        exact\r\n                                        path='/auth/login'\r\n                                        component={AuthRouter}\r\n                                    />\r\n                                ) : (\r\n                                    <Redirect\r\n                                        to='/'\r\n                                        component={JournalScreen}\r\n                                    />\r\n                                )\r\n                        } */}\r\n\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }            \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active:  null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case types.notesActive:\r\n        return {\r\n            ...state, \r\n            active: {\r\n                ...action.payload\r\n            }\r\n        }\r\n    case types.notesLoad:\r\n        return {\r\n            ...state,\r\n            notes: [\r\n                ...action.payload\r\n            ]\r\n        }\r\n    case types.notesUpdated:\r\n        return {\r\n            ...state,\r\n            notes: state.notes.map(\r\n                note => note.id === action.payload.id\r\n                    ? action.payload.note\r\n                    : note\r\n            )\r\n        }\r\n    case types.notesDelete:\r\n        return {\r\n            ...state,\r\n            active: null,\r\n            notes: state.notes.filter(note => note.id !== action.payload)\r\n        }\r\n    case types.notesAddNew:\r\n        return {\r\n            ...state,\r\n            notes: [...state.notes, action.payload]\r\n        }\r\n    case types.notesLogoutCleaning:\r\n        return{\r\n            ...state,\r\n            active: null,\r\n            notes: []\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { types } from '../types/types'\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName \r\n            }\r\n        case types.logout:\r\n            return {}\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\n\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}